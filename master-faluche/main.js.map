{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/main-choice/main-choice.component.ts","./src/app/components/main-choice/main-choice.component.html","./src/app/components/quiz-signification/quiz-signification.component.ts","./src/app/components/quiz-signification/quiz-signification.component.html","./src/app/components/quiz/quiz.component.ts","./src/app/components/quiz/quiz.component.html","./src/app/modules/material/material.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {MainChoiceComponent} from './components/main-choice/main-choice.component';\nimport {QuizComponent} from './components/quiz/quiz.component';\nimport {QuizSignificationComponent} from './components/quiz-signification/quiz-signification.component';\n\nconst routes: Routes = [\n  {path: '', component: MainChoiceComponent},\n  {path: 'quizNom', component: QuizComponent},\n  {path: 'quizSignification', component: QuizSignificationComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'master-faluche';\n}\n","<mat-toolbar color=\"primary\" style=\"position: fixed; z-index: 99\">\n  <button mat-flat-button color=\"primary\" routerLink=\"\">\n    <mat-icon>home</mat-icon><span style=\"font-size: x-large; padding-left: 15px\">Master Faluche</span>\n  </button>\n  <span class=\"example-spacer\"></span>\n</mat-toolbar>\n<div id=\"main-container\">\n  <router-outlet></router-outlet>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from './modules/material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { CommonModule } from '@angular/common';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainChoiceComponent } from './components/main-choice/main-choice.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { QuizComponent } from './components/quiz/quiz.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { QuizSignificationComponent } from './components/quiz-signification/quiz-signification.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainChoiceComponent,\n    QuizComponent,\n    QuizSignificationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatRippleModule,\n    MatSliderModule,\n    CommonModule,\n    HttpClientModule,\n    MatProgressBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-choice',\n  templateUrl: './main-choice.component.html',\n  styleUrls: ['./main-choice.component.css']\n})\nexport class MainChoiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n  <mat-card class=\"mat-elevation-z5\">\n    <mat-card-header>\n      <mat-card-title>Nom des insignes</mat-card-title>\n      <mat-card-subtitle>Le quiz du sympathisant</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      Quizz très imple permettant d'apprendre le nom des différents insignes.\n      <br>\n      Très facile.\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button mat-raised-button color=\"primary\" [routerLink]=\"['quizNom']\">Commencer</button>\n    </mat-card-actions>\n  </mat-card>\n\n  <mat-card class=\"mat-elevation-z5\">\n    <mat-card-header>\n      <mat-card-title>Meli Melooooooo</mat-card-title>\n      <mat-card-subtitle>Quiz global qui porte sur différents éléments de la faluche</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      Quizz plus compliqué que le précédent et lié à l'apprentissage des différentes significations d'insignes, et autres éléments de la faluche.\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button mat-raised-button color=\"primary\" [routerLink]=\"['quizSignification']\">Commencer</button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import {Component, OnInit, QueryList, ViewChildren} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-quiz-signification',\n  templateUrl: './quiz-signification.component.html',\n  styleUrls: ['./quiz-signification.component.css']\n})\nexport class QuizSignificationComponent implements OnInit {\n\n  @ViewChildren('answer') answerButtons: QueryList<HTMLButtonElement>;\n\n  bacs: any[];\n  circulaires: any[];\n  filieres: any[];\n  officiels: any[];\n  ready = false;\n  answers: any[];\n  correctIndex: number;\n  totalQuestions = 0;\n  correctAnswers = 0;\n  theme: string;\n  question: string;\n  keyAnswer: any;\n\n  constructor(private http: HttpClient) {\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.bacs = (await this.getJSON('assets/data/bacs.json').toPromise());\n    this.circulaires = (await this.getJSON('assets/data/circulaires.json').toPromise());\n    this.filieres = (await this.getJSON('assets/data/filieres.json').toPromise());\n    this.officiels = (await this.getJSON('assets/data/officiels.json').toPromise());\n    this.newQuestion();\n    this.ready = true;\n  }\n\n  private newQuestion(): void{\n    this.resetButtons();\n    const l1 = this.bacs.length;\n    const l2 = l1 + this.circulaires.length;\n    const l3 = l2 + this.filieres.length;\n    const l4 = l3 + this.officiels.length;\n    const rand = Math.floor(Math.random() * l4);\n    if (rand < l1){\n      this.newQuestionBac();\n    }else if (rand < l2){\n      this.newQuestionCirculaire();\n    }else if (rand < l3){\n      this.newQuestionFiliere();\n    }else{\n      this.newQuestionOfficiel();\n    }\n  }\n\n  public getJSON(url: string): Observable<any> {\n    return this.http.get(url);\n  }\n\n  checkAnswer(data: any[]): void {\n    const target = (data[0].path[0].tagName.toLowerCase() === 'span') ? data[0].path[1] : data[0].path[0];\n    (target as any).style.backgroundColor = 'rgba(244, 67, 54, 0.5)';\n    const answer = data[1];\n    this.showAnswer();\n    if (answer === this.answers[this.correctIndex]){\n      this.correctAnswers++;\n    }\n    this.totalQuestions++;\n    setTimeout( () => {\n      this.newQuestion();\n    }, 1250);\n  }\n\n  private showAnswer(): void{\n    const btns = this.answerButtons.toArray();\n    btns.forEach(b => b.disabled = true);\n    (btns[this.correctIndex] as any)._elementRef.nativeElement.style.backgroundColor = 'rgba(62,207,19, 0.5)';\n  }\n\n  private resetButtons(): void{\n    const btns = this.answerButtons.toArray();\n    btns.forEach(b => {\n      b.disabled = false;\n      (b as any)._elementRef.nativeElement.style.backgroundColor = 'rgba(0, 0, 0, 0)';\n    });\n  }\n\n  private pickRandom(arr: any[]): void{\n    this.answers = [];\n    while (this.answers.length < 4){\n      const el = arr[Math.floor(Math.random() * arr.length)];\n      if (!this.answers.find(x => x === el)){\n        this.answers.push(el);\n      }\n    }\n    this.correctIndex = Math.floor(Math.random() * this.answers.length);\n    console.log(this.answers);\n    console.log(this.correctIndex);\n  }\n\n  private newQuestionBac(): void {\n    this.theme = 'Insigne de bac';\n    this.pickRandom(this.bacs);\n    if (Math.floor(Math.random() * 2)) {\n      this.question = 'Quelle insigne représente: ' + this.answers[this.correctIndex].libelle + ' ?';\n      this.keyAnswer = 'insigne';\n    }else{\n      this.question = 'Quel bac représente l\\'insigne: ' + this.answers[this.correctIndex].insigne + ' ?';\n      this.keyAnswer = 'libelle';\n    }\n  }\n\n  private newQuestionCirculaire(): void {\n    this.theme = 'Couleur de circulaire';\n    this.pickRandom(this.circulaires);\n    if (Math.floor(Math.random() * 2)) {\n      this.question = 'Quelle fillière est représentée par la couleur de circulaire suivante: '\n        + this.answers[this.correctIndex].couleur + ' ?';\n      this.keyAnswer = 'libelle';\n    }else{\n      this.question = 'Quelle couleur de circulaire représente la filière suivante : '\n        + this.answers[this.correctIndex].libelle + ' ?';\n      this.keyAnswer = 'couleur';\n    }\n  }\n\n  private newQuestionFiliere(): void {\n    this.theme = 'Insigne de filière';\n    this.pickRandom(this.filieres);\n    if (Math.floor(Math.random() * 2)) {\n      this.question = 'Quelle filière est représentée par l\\'insigne de circulaire suivant : '\n        + this.answers[this.correctIndex].insigne + ' ?';\n      this.keyAnswer = 'libelle';\n    }else{\n      this.question = 'Quelle insigne de circulaire représente la filière suivante : '\n        + this.answers[this.correctIndex].libelle + ' ?';\n      this.keyAnswer = 'insigne';\n    }\n  }\n\n  private newQuestionOfficiel(): void {\n    this.theme = 'Insigne de partie officielle';\n    this.pickRandom(this.officiels);\n    if (Math.floor(Math.random() * 2)) {\n      this.question = 'Que représente l\\'insigne suivant : '\n        + this.answers[this.correctIndex].insigne + ' ?';\n      this.keyAnswer = 'libelle';\n    }else{\n      this.question = 'Le terme \\'' + this.answers[this.correctIndex].libelle + '\\' est représenté par ?';\n      this.keyAnswer = 'insigne';\n    }\n  }\n}\n","<div *ngIf=\"ready\">\n\n  <!-- question -->\n  <div id=\"question\">\n    <h2>{{theme | titlecase}}</h2>\n    <h3>{{question}}</h3>\n  </div>\n\n  <div id=\"answers-container\">\n    <button mat-stroked-button color=\"primary\" class=\"answer\" (click)=\"checkAnswer([$event,answers[0]])\" #answer>{{answers[0][keyAnswer]}}</button>\n    <button mat-stroked-button color=\"primary\" class=\"answer\" (click)=\"checkAnswer([$event,answers[1]])\" #answer>{{answers[1][keyAnswer]}}</button>\n    <button mat-stroked-button color=\"primary\" class=\"answer\" (click)=\"checkAnswer([$event,answers[2]])\" #answer>{{answers[2][keyAnswer]}}</button>\n    <button mat-stroked-button color=\"primary\" class=\"answer\" (click)=\"checkAnswer([$event,answers[3]])\" #answer>{{answers[3][keyAnswer]}}</button>\n  </div>\n\n  <div *ngIf=\"totalQuestions > 0\" id=\"info\">\n    <p >Ton taux de réussite <span>{{correctAnswers/totalQuestions | percent}}</span></p>\n    <mat-progress-bar mode=\"determinate\" [value]=\"(correctAnswers/totalQuestions)*100\"></mat-progress-bar>\n  </div>\n</div>\n","import {Component, OnInit, QueryList, ViewChild, ViewChildren} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.css']\n})\nexport class QuizComponent implements OnInit {\n\n  @ViewChildren('answer') answerButtons: QueryList<HTMLButtonElement>;\n\n  // tslint:disable-next-line:variable-name\n  private _jsonURL = 'assets/insignes/insignes.json';\n  // tslint:disable-next-line:variable-name\n  private _data: any[];\n  answers: any[] = [];\n  correctIndex: any;\n  ready = false;\n\n  correctAnswers = 0;\n  totalQuestions = 0;\n\n  constructor(private http: HttpClient) {\n    this.getJSON().subscribe(data => {\n      // tslint:disable-next-line:variable-name\n      this._data = (data as any[]).filter(x => x.src);\n      this.newQuestion();\n      this.ready = true;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  public getJSON(): Observable<any> {\n    return this.http.get(this._jsonURL);\n  }\n\n  private newQuestion(): void{\n    this.resetButtons();\n    this.answers = [];\n    while (this.answers.length < 4){\n      const el = this._data[Math.floor(Math.random() * this._data.length)];\n      if (!this.answers.find(x => x.nom === el.nom)){\n        this.answers.push(el);\n      }\n    }\n    this.correctIndex = Math.floor(Math.random() * this.answers.length);\n  }\n\n  checkAnswer(data: any): void {\n    const target = (data[0].path[0].tagName.toLowerCase() === 'span') ? data[0].path[1] : data[0].path[0];\n    (target as any).style.backgroundColor = 'rgba(244, 67, 54, 0.5)';\n    const answer = data[1];\n    this.showAnswer();\n    if (answer === this.answers[this.correctIndex]){\n      this.correctAnswers++;\n    }\n    this.totalQuestions++;\n    setTimeout( () => {\n      this.newQuestion();\n    }, 1250);\n  }\n\n  private showAnswer(): void{\n    const btns = this.answerButtons.toArray();\n    btns.forEach(b => b.disabled = true);\n    (btns[this.correctIndex] as any)._elementRef.nativeElement.style.backgroundColor = 'rgba(62,207,19, 0.5)';\n  }\n\n  private resetButtons(): void{\n    const btns = this.answerButtons.toArray();\n    btns.forEach(b => {\n      b.disabled = false;\n      (b as any)._elementRef.nativeElement.style.backgroundColor = 'rgba(0, 0, 0, 0)';\n    });\n  }\n}\n","<div *ngIf=\"ready\">\n\n  <!-- question -->\n  <div id=\"question\">\n    <h2>Nommer cette insigne :</h2>\n    <img src=\"assets/insignes/{{answers[correctIndex].src}}\">\n  </div>\n\n  <div id=\"answers-container\">\n    <button mat-stroked-button color=\"primary\" class=\"answer\" (click)=\"checkAnswer([$event,answers[0]])\" #answer>{{answers[0].nom}}</button>\n    <button mat-stroked-button color=\"primary\" class=\"answer\" (click)=\"checkAnswer([$event,answers[1]])\" #answer>{{answers[1].nom}}</button>\n    <button mat-stroked-button color=\"primary\" class=\"answer\" (click)=\"checkAnswer([$event,answers[2]])\" #answer>{{answers[2].nom}}</button>\n    <button mat-stroked-button color=\"primary\" class=\"answer\" (click)=\"checkAnswer([$event,answers[3]])\" #answer>{{answers[3].nom}}</button>\n  </div>\n\n  <div *ngIf=\"totalQuestions > 0\" id=\"info\">\n    <p >Ton taux de réussite <span>{{correctAnswers/totalQuestions | percent}}</span></p>\n    <mat-progress-bar mode=\"determinate\" [value]=\"(correctAnswers/totalQuestions)*100\"></mat-progress-bar>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\nconst material = [\r\n  MatButtonModule,\r\n  MatSlideToggleModule,\r\n  MatSortModule,\r\n  MatTreeModule,\r\n  MatPaginatorModule,\r\n  MatButtonToggleModule,\r\n  MatTableModule,\r\n  MatSnackBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatToolbarModule,\r\n  MatMenuModule,\r\n  MatListModule,\r\n  MatDividerModule,\r\n  MatTooltipModule,\r\n  MatGridListModule,\r\n  MatExpansionModule,\r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatTabsModule,\r\n  MatStepperModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSelectModule,\r\n  MatAutocompleteModule,\r\n  MatCheckboxModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatRadioModule,\r\n  MatDialogModule,\r\n  MatSidenavModule\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    material\r\n  ],\r\n  exports: [\r\n    material\r\n  ],\r\n})\r\nexport class MaterialModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}